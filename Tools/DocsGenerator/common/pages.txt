
/*!	\namespace AVRCpp::Internal
	\brief Only for library's internal use
*/

/*!	\namespace AVRCpp::USART::Internal
	\brief Only for library's internal use
*/

/*!	\namespace AVRCpp::Timer::Internal
	\brief Only for library's internal use
*/

/*!	\namespace AVRCpp::EEPROM::Internal
	\brief Only for library's internal use
*/


/*!	\namespace AVRCpp::ExternalInterrupt::Internal
	\brief Only for library's internal use
*/

/*!	\namespace CppDelegate::Internal
	\brief Only for library's internal use
*/

/*!	\namespace AVRCpp::Collection
	\brief Classes for different types of arrays and queues
*/

/*!	\namespace AVRCpp::Assembler
	\brief To insert machine code explicitly into the program
*/

/*!	\namespace AVRCpp::Sleeping
	\brief Power management and sleep modes
*/

/*!	\namespace AVRCpp::USART
	\brief Fuctionality of Universal Synchronous and Asynchronous Serial Receiver and Transmitter interfaces.

*/

/*!	\namespace AVRCpp::Timer
	\brief Functionality of Timers/Counters

*/

/*!	\namespace AVRCpp::EEPROM
	\brief Fuctionality of EEPROM memory
*/


/*!	\namespace AVRCpp::AnalogToDigital
	\brief Analog to digital converter
*/

/*!	\namespace CppDelegate
	\brief C++ delegates (on example of .NET Framework) mainly for dynamic interrupthandlers
*/

/*!	\namespace AVRCpp::GlobalInterrupts
	\brief Enabling and disabling global interrupts
*/

/*!	\namespace AVRCpp::ExternalInterrupt
	\brief Functionality of external interrupts
*/

/*!	\namespace std
	\brief delete and new operator support from libstdc++	

*/

/*!	\namespace AVRCpp
	\brief Base functions and classes

*/